name: all-in-one
permissions:
  contents: write

on:
  workflow_call:
    inputs:
      name:
        description: "Package name"
        required: true
        type: string
      deps:
        description: "Comma-separated package deps"
        required: false
        type: string
      deps_deb:
        description: 'Debian/Ubuntu dependency names'
        required: false
        default: ''
        type: string
      deps_rpm:
        description: 'Fedora/RHEL dependency names'
        required: false
        default: ''
        type: string
      deps_apk:
        description: 'Alpine dependency names'
        required: false
        default: ''
        type: string
      deps_pacman:
        description: 'Arch dependency names'
        required: false
        default: ''
        type: string
      deps_brew:
        description: 'Brew dependency names'
        required: false
        default: ''
        type: string
      publish_to:
        description: "Package managers to publish to"
        required: false
        default: "deb,apk,pacman,rpm,brew"
        type: string
      repo_name:
        description: "Repository name for pacman and RPM"
        required: false
        default: "ttypt"
        type: string
    secrets:
      HOST:
        required: true
      USER:
        required: true
      SSH_KEY:
        required: true
      GPG_PRIVATE_KEY:
        required: false
      GPG_PASSPHRASE:
        required: false
      GPG_KEYID:
        required: false
      ABUILD_PRIVATE_KEY:
        required: false
      ABUILD_PUBLIC_KEY:
        required: false
      TAP_TOKEN:
        required: false

jobs:
  package-deb:
    if: contains(inputs.publish_to, 'deb')
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/tty-pt/ubuntu-builder:latest
    steps:
    - name: Package APT
      uses: tty-pt/ci/package@main
      with:
        name: ${{ inputs.name }}
        format: 'deb'
        deps: ${{ inputs.deps }}
        deps_deb: ${{ inputs.deps_deb }}
        gpg_key: ${{ secrets.GPG_PRIVATE_KEY }}
        gpg_pass: ${{ secrets.GPG_PASSPHRASE }}
        gpg_keyid: ${{ secrets.GPG_KEYID }}

  package-apk:
    if: contains(inputs.publish_to, 'apk')
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/tty-pt/alpine-builder:latest
    steps:
    - name: Package APK
      uses: tty-pt/ci/package@main
      with:
        name: ${{ inputs.name }}
        format: 'apk'
        deps: ${{ inputs.deps }}
        deps_apk: ${{ inputs.deps_apk }}
        abuild_key: ${{ secrets.ABUILD_PRIVATE_KEY }}
        abuild_pub: ${{ secrets.ABUILD_PUBLIC_KEY }}

  package-pacman:
    if: contains(inputs.publish_to, 'pacman')
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/tty-pt/arch-builder:latest
    steps:
    - name: Package PACMAN
      uses: tty-pt/ci/package@main
      with:
        name: ${{ inputs.name }}
        format: 'pacman'
        ext: 'pkg.tar.*'
        deps: ${{ inputs.deps }}
        deps_pacman: ${{ inputs.deps_pacman }}
        gpg_key: ${{ secrets.GPG_PRIVATE_KEY }}
        gpg_pass: ${{ secrets.GPG_PASSPHRASE }}
        gpg_keyid: ${{ secrets.GPG_KEYID }}

  package-rpm:
    if: contains(inputs.publish_to, 'rpm')
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/tty-pt/rocky-builder:latest
    steps:
    - name: Package RPM
      uses: tty-pt/ci/package@main
      with:
        name: ${{ inputs.name }}
        format: 'rpm'
        deps: ${{ inputs.deps }}
        deps_rpm: ${{ inputs.deps_rpm }}
        gpg_key: ${{ secrets.GPG_PRIVATE_KEY }}
        gpg_pass: ${{ secrets.GPG_PASSPHRASE }}
        gpg_keyid: ${{ secrets.GPG_KEYID }}

  package-brew:
    if: contains(inputs.publish_to, 'brew')
    runs-on: macos-latest
    steps:
    - name: Package macOS
      uses: tty-pt/ci/package@main
      with:
        name: ${{ inputs.name }}
        format: 'brew'
        deps: ${{ inputs.deps }}
        deps_brew: ${{ inputs.deps_brew }}

  release:
    runs-on: ubuntu-latest
    needs:
      - package-pacman
      - package-rpm
      - package-apk
      - package-deb
      - package-brew
    if: always() && startsWith(github.ref, 'refs/tags/')
    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: release/
      
      - name: Create and publish GitHub Release
        uses: tty-pt/ci/release@main

  publish-deb:
    if: contains(inputs.publish_to, 'deb')
    runs-on: ubuntu-latest
    needs: [package-deb]
    steps:
      - name: Download DEB artifacts
        uses: actions/download-artifact@v4
        with:
          name: ${{ inputs.name }}-deb
          path: dist-deb

      - name: Publish APT repository
        uses: tty-pt/ci/publish@main
        with:
          format: 'deb'
          source: 'dist-deb/*'
          host: ${{ secrets.HOST }}
          user: ${{ secrets.USER }}
          ssh_key: ${{ secrets.SSH_KEY }}
          gpg_key: ${{ secrets.GPG_PRIVATE_KEY }}
          gpg_keyid: ${{ secrets.GPG_KEYID }}
          gpg_pass: ${{ secrets.GPG_PASSPHRASE }}

  publish-apk:
    if: contains(inputs.publish_to, 'apk')
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/tty-pt/alpine-builder:latest
    needs: [package-apk]
    steps:
      - name: Download APK artifacts
        uses: actions/download-artifact@v4
        with:
          name: ${{ inputs.name }}-apk
          path: dist-apk

      - name: Publish APK repository
        uses: tty-pt/ci/publish@main
        with:
          format: 'apk'
          source: 'dist-apk/*'
          host: ${{ secrets.HOST }}
          user: ${{ secrets.USER }}
          ssh_key: ${{ secrets.SSH_KEY }}
          abuild_key: ${{ secrets.ABUILD_PRIVATE_KEY }}
          abuild_pub: ${{ secrets.ABUILD_PUBLIC_KEY }}

  publish-rpm:
    if: contains(inputs.publish_to, 'rpm')
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/tty-pt/rocky-builder:latest
    needs: [package-rpm]
    steps:
      - name: Download RPM artifacts
        uses: actions/download-artifact@v4
        with:
          name: ${{ inputs.name }}-rpm
          path: dist-rpm

      - name: Publish RPM repository
        uses: tty-pt/ci/publish@main
        with:
          format: 'rpm'
          source: 'dist-rpm/*'
          host: ${{ secrets.HOST }}
          user: ${{ secrets.USER }}
          ssh_key: ${{ secrets.SSH_KEY }}
          gpg_key: ${{ secrets.GPG_PRIVATE_KEY }}
          gpg_keyid: ${{ secrets.GPG_KEYID }}
          gpg_pass: ${{ secrets.GPG_PASSPHRASE }}

  publish-pacman:
    if: contains(inputs.publish_to, 'pacman')
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/tty-pt/arch-builder:latest
    needs: [package-pacman]
    steps:
      - name: Download RPM artifacts
        uses: actions/download-artifact@v4
        with:
          name: ${{ inputs.name }}-pacman
          path: dist-pacman

      - name: Publish RPM repository
        uses: tty-pt/ci/publish@main
        with:
          format: 'pacman'
          source: 'dist-pacman/*'
          host: ${{ secrets.HOST }}
          user: ${{ secrets.USER }}
          ssh_key: ${{ secrets.SSH_KEY }}
          gpg_key: ${{ secrets.GPG_PRIVATE_KEY }}
          gpg_keyid: ${{ secrets.GPG_KEYID }}
          gpg_pass: ${{ secrets.GPG_PASSPHRASE }}

  publish-brew:
    if: contains(inputs.publish_to, 'brew')
    runs-on: ubuntu-latest
    needs: [package-brew]
    steps:
      - name: Download macOS artifacts
        uses: actions/download-artifact@v4
        with:
          name: ${{ inputs.name }}-brew
          path: dist-brew

      - name: Publish macOS distribution
        uses: tty-pt/ci/publish@main
        with:
          format: 'brew'
          source: 'dist-brew/*'
          host: ${{ secrets.HOST }}
          user: ${{ secrets.USER }}
          ssh_key: ${{ secrets.SSH_KEY }}
          gpg_key: ${{ secrets.GPG_PRIVATE_KEY }}
          gpg_keyid: ${{ secrets.GPG_KEYID }}
          gpg_pass: ${{ secrets.GPG_PASSPHRASE }}
          tap_token: ${{ secrets.TAP_TOKEN }}
