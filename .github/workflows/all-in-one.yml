name: all-in-one
permissions:
  contents: write

on:
  workflow_call:
    inputs:
      name:
        description: "Package name"
        required: true
        type: string
      deps:
        description: "Comma-separated package deps"
        required: false
        type: string
      deps_deb:
        description: 'Debian/Ubuntu dependency names'
        required: false
        default: ''
        type: string
      deps_rpm:
        description: 'Fedora/RHEL dependency names'
        required: false
        default: ''
        type: string
      deps_apk:
        description: 'Alpine dependency names'
        required: false
        default: ''
        type: string
      deps_pacman:
        description: 'Arch dependency names'
        required: false
        default: ''
        type: string
      deps_brew:
        description: 'Brew dependency names'
        required: false
        default: ''
        type: string
      deps_openbsd:
        description: 'OpenBSD dependency names'
        required: false
        default: ''
        type: string
      deps_msys:
        description: 'Msys dependency names'
        required: false
        default: ''
        type: string
      publish_to:
        description: "Package managers to publish to"
        required: false
        default: "deb,apk,pacman,rpm,brew,openbsd,msys"
        type: string
      repo_name:
        description: "Repository name for pacman and RPM"
        required: false
        default: "ttypt"
        type: string
    secrets:
      HOST:
        required: true
      USER:
        required: true
      SSH_KEY:
        required: true
      GPG_PRIVATE_KEY:
        required: false
      GPG_PASSPHRASE:
        required: false
      GPG_KEYID:
        required: false
      ABUILD_PRIVATE_KEY:
        required: false
      ABUILD_PUBLIC_KEY:
        required: false
      TAP_TOKEN:
        required: false

jobs:
  package:
    runs-on: ${{ matrix.runner }}
    container: ${{ matrix.image || null }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - format: deb
            runner: ubuntu-latest
            image: ghcr.io/tty-pt/ubuntu-builder:latest
          - format: apk
            runner: ubuntu-latest
            image: ghcr.io/tty-pt/alpine-builder:latest
          - format: pacman
            runner: ubuntu-latest
            image: ghcr.io/tty-pt/arch-builder:latest
          - format: rpm
            runner: ubuntu-latest
            image: ghcr.io/tty-pt/rocky-builder:latest
          - format: msys
            runner: ubuntu-latest
            image: ghcr.io/tty-pt/msys-builder:latest
          - format: openbsd
            runner: ubuntu-latest
          - format: brew
            arch: arm64
            runner: macos-latest
          - format: brew
            arch: x86_64
            runner: macos-13

    steps:
      - name: Package for ${{ matrix.format }} (${{ matrix.arch || 'default' }})
        if: contains(inputs.publish_to, matrix.format)
        uses: tty-pt/ci/package@msys
        with:
          name: ${{ inputs.name }}
          format: ${{ matrix.format }}
          ext: ${{ (matrix.format == 'pacman' || matrix.format == 'msys') && 'pkg.tar.*' || '' }}
          deps: ${{ inputs.deps }}
          deps_deb: ${{ inputs.deps_deb || '' }}
          deps_apk: ${{ inputs.deps_apk || '' }}
          deps_pacman: ${{ inputs.deps_pacman || '' }}
          deps_rpm: ${{ inputs.deps_rpm || '' }}
          deps_msys: ${{ inputs.deps_msys || '' }}
          deps_brew: ${{ inputs.deps_brew || '' }}
          deps_openbsd: ${{ inputs.deps_openbsd || '' }}
          gpg_key: ${{ secrets.GPG_PRIVATE_KEY }}
          gpg_pass: ${{ secrets.GPG_PASSPHRASE }}
          gpg_keyid: ${{ secrets.GPG_KEYID }}
          abuild_key: ${{ secrets.ABUILD_PRIVATE_KEY || '' }}
          abuild_pub: ${{ secrets.ABUILD_PUBLIC_KEY || '' }}
          host: ${{ secrets.HOST || '' }}
          user: ${{ secrets.USER || '' }}
          ssh_key: ${{ secrets.SSH_KEY || '' }}

  publish:
    needs: package
    runs-on: ${{ matrix.runner }}
    container: ${{ matrix.image || null }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - format: deb
            runner: ubuntu-latest
            image: ghcr.io/tty-pt/ubuntu-builder:latest
          - format: apk
            runner: ubuntu-latest
            image: ghcr.io/tty-pt/alpine-builder:latest
          - format: pacman
            runner: ubuntu-latest
            image: ghcr.io/tty-pt/arch-builder:latest
          - format: rpm
            runner: ubuntu-latest
            image: ghcr.io/tty-pt/rocky-builder:latest
          - format: msys
            runner: ubuntu-latest
            image: ghcr.io/tty-pt/msys-builder:latest
          - format: openbsd
            runner: ubuntu-latest
          - format: brew
            arch: arm64
            runner: macos-latest
          - format: brew
            arch: x86_64
            runner: macos-13

    steps:
      - name: Publish ${{ matrix.format }}
        if: contains(inputs.publish_to, matrix.format)
        uses: tty-pt/ci/publish@msys
        with:
          name: ${{ inputs.name }}
          format: ${{ matrix.format }}
          source: '*-${{ matrix.format }}-*/*'
          host: ${{ secrets.HOST }}
          user: ${{ secrets.USER }}
          ssh_key: ${{ secrets.SSH_KEY }}
          deps: ${{ inputs.deps || '' }}
          deps_brew: ${{ inputs.deps_brew || '' }}
          gpg_key: ${{ secrets.GPG_PRIVATE_KEY }}
          gpg_keyid: ${{ secrets.GPG_KEYID }}
          gpg_pass: ${{ secrets.GPG_PASSPHRASE }}
          abuild_key: ${{ secrets.ABUILD_PRIVATE_KEY || '' }}
          abuild_pub: ${{ secrets.ABUILD_PUBLIC_KEY || '' }}
          tap_token: ${{ secrets.TAP_TOKEN || '' }}

  release:
    runs-on: ubuntu-latest
    needs: package
    if: always() && startsWith(github.ref, 'refs/tags/')
    steps:
      - name: Create and publish GitHub Release
        uses: tty-pt/ci/release@main
        with:
          gpg_key: ${{ secrets.GPG_PRIVATE_KEY }}
          gpg_keyid: ${{ secrets.GPG_KEYID }}
          gpg_pass: ${{ secrets.GPG_PASSPHRASE }}
